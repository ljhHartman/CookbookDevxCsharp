//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CookbookDevxCsharp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SSLTESTDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SSLTESTDataSet1 : global::System.Data.DataSet {
        
        private KostenOpbrengstenDataTable tableKostenOpbrengsten;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public SSLTESTDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected SSLTESTDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KostenOpbrengsten"] != null)) {
                    base.Tables.Add(new KostenOpbrengstenDataTable(ds.Tables["KostenOpbrengsten"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KostenOpbrengstenDataTable KostenOpbrengsten {
            get {
                return this.tableKostenOpbrengsten;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SSLTESTDataSet1 cln = ((SSLTESTDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KostenOpbrengsten"] != null)) {
                    base.Tables.Add(new KostenOpbrengstenDataTable(ds.Tables["KostenOpbrengsten"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableKostenOpbrengsten = ((KostenOpbrengstenDataTable)(base.Tables["KostenOpbrengsten"]));
            if ((initTable == true)) {
                if ((this.tableKostenOpbrengsten != null)) {
                    this.tableKostenOpbrengsten.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SSLTESTDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SSLTESTDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKostenOpbrengsten = new KostenOpbrengstenDataTable();
            base.Tables.Add(this.tableKostenOpbrengsten);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeKostenOpbrengsten() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SSLTESTDataSet1 ds = new SSLTESTDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void KostenOpbrengstenRowChangeEventHandler(object sender, KostenOpbrengstenRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KostenOpbrengstenDataTable : global::System.Data.TypedTableBase<KostenOpbrengstenRow> {
            
            private global::System.Data.DataColumn columnKONUMMER;
            
            private global::System.Data.DataColumn columnDOSSIERNUMMER;
            
            private global::System.Data.DataColumn columnKOSTCODE;
            
            private global::System.Data.DataColumn columnOMSCHRIJVING;
            
            private global::System.Data.DataColumn columnFACTUURVALUTA;
            
            private global::System.Data.DataColumn columnKOSTPRIJS;
            
            private global::System.Data.DataColumn columnKOSTAANTAL;
            
            private global::System.Data.DataColumn columnKOSTBEDRAG;
            
            private global::System.Data.DataColumn columnKOSTVALUTA;
            
            private global::System.Data.DataColumn columnKOSTBTWCODE;
            
            private global::System.Data.DataColumn columnKOSTBTWBEDRAG;
            
            private global::System.Data.DataColumn columnKOSTRELATIE;
            
            private global::System.Data.DataColumn columnKOSTOMSCHRIJVING;
            
            private global::System.Data.DataColumn columnOPBRENGSTPRIJS;
            
            private global::System.Data.DataColumn columnOPBRENGSTAANTAL;
            
            private global::System.Data.DataColumn columnOPBRENGSTBEDRAG;
            
            private global::System.Data.DataColumn columnOPBRENGSTVALUTA;
            
            private global::System.Data.DataColumn columnOPBRENGSTBTWCODE;
            
            private global::System.Data.DataColumn columnOPBRENGSTBTWBEDRAG;
            
            private global::System.Data.DataColumn columnOPBRENGSTRELATIE;
            
            private global::System.Data.DataColumn columnOPBRENGSTOMSCHRIJVING;
            
            private global::System.Data.DataColumn columnIFACTUURREGELNUMMER;
            
            private global::System.Data.DataColumn columnUFACTUURREGELNUMMER;
            
            private global::System.Data.DataColumn columnMEDEWERKER;
            
            private global::System.Data.DataColumn columnUFACTUURNUMMER;
            
            private global::System.Data.DataColumn columnIFACTUURNUMMER;
            
            private global::System.Data.DataColumn columnUFACTUURREGELPRINTEN;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnFACTUREREN;
            
            private global::System.Data.DataColumn columnVOLGORDE;
            
            private global::System.Data.DataColumn columnOPBRENGSTWISSELKOERS;
            
            private global::System.Data.DataColumn columnOPBRENGSTBEDRAGEURO;
            
            private global::System.Data.DataColumn columnKOSTWISSELKOERS;
            
            private global::System.Data.DataColumn columnKOSTBEDRAGEURO;
            
            private global::System.Data.DataColumn columnROWOPEN;
            
            private global::System.Data.DataColumn columnROWOPENBY;
            
            private global::System.Data.DataColumn columnBTWREGEL;
            
            private global::System.Data.DataColumn columnCREDITCRNUMBER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenDataTable() {
                this.TableName = "KostenOpbrengsten";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal KostenOpbrengstenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected KostenOpbrengstenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KONUMMERColumn {
                get {
                    return this.columnKONUMMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DOSSIERNUMMERColumn {
                get {
                    return this.columnDOSSIERNUMMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTCODEColumn {
                get {
                    return this.columnKOSTCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OMSCHRIJVINGColumn {
                get {
                    return this.columnOMSCHRIJVING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FACTUURVALUTAColumn {
                get {
                    return this.columnFACTUURVALUTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTPRIJSColumn {
                get {
                    return this.columnKOSTPRIJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTAANTALColumn {
                get {
                    return this.columnKOSTAANTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTBEDRAGColumn {
                get {
                    return this.columnKOSTBEDRAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTVALUTAColumn {
                get {
                    return this.columnKOSTVALUTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTBTWCODEColumn {
                get {
                    return this.columnKOSTBTWCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTBTWBEDRAGColumn {
                get {
                    return this.columnKOSTBTWBEDRAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTRELATIEColumn {
                get {
                    return this.columnKOSTRELATIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTOMSCHRIJVINGColumn {
                get {
                    return this.columnKOSTOMSCHRIJVING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTPRIJSColumn {
                get {
                    return this.columnOPBRENGSTPRIJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTAANTALColumn {
                get {
                    return this.columnOPBRENGSTAANTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTBEDRAGColumn {
                get {
                    return this.columnOPBRENGSTBEDRAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTVALUTAColumn {
                get {
                    return this.columnOPBRENGSTVALUTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTBTWCODEColumn {
                get {
                    return this.columnOPBRENGSTBTWCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTBTWBEDRAGColumn {
                get {
                    return this.columnOPBRENGSTBTWBEDRAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTRELATIEColumn {
                get {
                    return this.columnOPBRENGSTRELATIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTOMSCHRIJVINGColumn {
                get {
                    return this.columnOPBRENGSTOMSCHRIJVING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IFACTUURREGELNUMMERColumn {
                get {
                    return this.columnIFACTUURREGELNUMMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UFACTUURREGELNUMMERColumn {
                get {
                    return this.columnUFACTUURREGELNUMMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MEDEWERKERColumn {
                get {
                    return this.columnMEDEWERKER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UFACTUURNUMMERColumn {
                get {
                    return this.columnUFACTUURNUMMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IFACTUURNUMMERColumn {
                get {
                    return this.columnIFACTUURNUMMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UFACTUURREGELPRINTENColumn {
                get {
                    return this.columnUFACTUURREGELPRINTEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FACTURERENColumn {
                get {
                    return this.columnFACTUREREN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VOLGORDEColumn {
                get {
                    return this.columnVOLGORDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTWISSELKOERSColumn {
                get {
                    return this.columnOPBRENGSTWISSELKOERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OPBRENGSTBEDRAGEUROColumn {
                get {
                    return this.columnOPBRENGSTBEDRAGEURO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTWISSELKOERSColumn {
                get {
                    return this.columnKOSTWISSELKOERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOSTBEDRAGEUROColumn {
                get {
                    return this.columnKOSTBEDRAGEURO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROWOPENColumn {
                get {
                    return this.columnROWOPEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROWOPENBYColumn {
                get {
                    return this.columnROWOPENBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BTWREGELColumn {
                get {
                    return this.columnBTWREGEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CREDITCRNUMBERColumn {
                get {
                    return this.columnCREDITCRNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenRow this[int index] {
                get {
                    return ((KostenOpbrengstenRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KostenOpbrengstenRowChangeEventHandler KostenOpbrengstenRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KostenOpbrengstenRowChangeEventHandler KostenOpbrengstenRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KostenOpbrengstenRowChangeEventHandler KostenOpbrengstenRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event KostenOpbrengstenRowChangeEventHandler KostenOpbrengstenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddKostenOpbrengstenRow(KostenOpbrengstenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenRow AddKostenOpbrengstenRow(
                        int DOSSIERNUMMER, 
                        string KOSTCODE, 
                        string OMSCHRIJVING, 
                        string FACTUURVALUTA, 
                        decimal KOSTPRIJS, 
                        decimal KOSTAANTAL, 
                        decimal KOSTBEDRAG, 
                        string KOSTVALUTA, 
                        int KOSTBTWCODE, 
                        decimal KOSTBTWBEDRAG, 
                        string KOSTRELATIE, 
                        string KOSTOMSCHRIJVING, 
                        decimal OPBRENGSTPRIJS, 
                        decimal OPBRENGSTAANTAL, 
                        decimal OPBRENGSTBEDRAG, 
                        string OPBRENGSTVALUTA, 
                        int OPBRENGSTBTWCODE, 
                        decimal OPBRENGSTBTWBEDRAG, 
                        string OPBRENGSTRELATIE, 
                        string OPBRENGSTOMSCHRIJVING, 
                        int IFACTUURREGELNUMMER, 
                        int UFACTUURREGELNUMMER, 
                        string MEDEWERKER, 
                        int UFACTUURNUMMER, 
                        int IFACTUURNUMMER, 
                        bool UFACTUURREGELPRINTEN, 
                        System.DateTime DATUM, 
                        bool FACTUREREN, 
                        int VOLGORDE, 
                        decimal OPBRENGSTWISSELKOERS, 
                        decimal OPBRENGSTBEDRAGEURO, 
                        decimal KOSTWISSELKOERS, 
                        decimal KOSTBEDRAGEURO, 
                        bool ROWOPEN, 
                        string ROWOPENBY, 
                        bool BTWREGEL, 
                        int CREDITCRNUMBER) {
                KostenOpbrengstenRow rowKostenOpbrengstenRow = ((KostenOpbrengstenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DOSSIERNUMMER,
                        KOSTCODE,
                        OMSCHRIJVING,
                        FACTUURVALUTA,
                        KOSTPRIJS,
                        KOSTAANTAL,
                        KOSTBEDRAG,
                        KOSTVALUTA,
                        KOSTBTWCODE,
                        KOSTBTWBEDRAG,
                        KOSTRELATIE,
                        KOSTOMSCHRIJVING,
                        OPBRENGSTPRIJS,
                        OPBRENGSTAANTAL,
                        OPBRENGSTBEDRAG,
                        OPBRENGSTVALUTA,
                        OPBRENGSTBTWCODE,
                        OPBRENGSTBTWBEDRAG,
                        OPBRENGSTRELATIE,
                        OPBRENGSTOMSCHRIJVING,
                        IFACTUURREGELNUMMER,
                        UFACTUURREGELNUMMER,
                        MEDEWERKER,
                        UFACTUURNUMMER,
                        IFACTUURNUMMER,
                        UFACTUURREGELPRINTEN,
                        DATUM,
                        FACTUREREN,
                        VOLGORDE,
                        OPBRENGSTWISSELKOERS,
                        OPBRENGSTBEDRAGEURO,
                        KOSTWISSELKOERS,
                        KOSTBEDRAGEURO,
                        ROWOPEN,
                        ROWOPENBY,
                        BTWREGEL,
                        CREDITCRNUMBER};
                rowKostenOpbrengstenRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKostenOpbrengstenRow);
                return rowKostenOpbrengstenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenRow FindByKONUMMER(int KONUMMER) {
                return ((KostenOpbrengstenRow)(this.Rows.Find(new object[] {
                            KONUMMER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KostenOpbrengstenDataTable cln = ((KostenOpbrengstenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KostenOpbrengstenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnKONUMMER = base.Columns["KONUMMER"];
                this.columnDOSSIERNUMMER = base.Columns["DOSSIERNUMMER"];
                this.columnKOSTCODE = base.Columns["KOSTCODE"];
                this.columnOMSCHRIJVING = base.Columns["OMSCHRIJVING"];
                this.columnFACTUURVALUTA = base.Columns["FACTUURVALUTA"];
                this.columnKOSTPRIJS = base.Columns["KOSTPRIJS"];
                this.columnKOSTAANTAL = base.Columns["KOSTAANTAL"];
                this.columnKOSTBEDRAG = base.Columns["KOSTBEDRAG"];
                this.columnKOSTVALUTA = base.Columns["KOSTVALUTA"];
                this.columnKOSTBTWCODE = base.Columns["KOSTBTWCODE"];
                this.columnKOSTBTWBEDRAG = base.Columns["KOSTBTWBEDRAG"];
                this.columnKOSTRELATIE = base.Columns["KOSTRELATIE"];
                this.columnKOSTOMSCHRIJVING = base.Columns["KOSTOMSCHRIJVING"];
                this.columnOPBRENGSTPRIJS = base.Columns["OPBRENGSTPRIJS"];
                this.columnOPBRENGSTAANTAL = base.Columns["OPBRENGSTAANTAL"];
                this.columnOPBRENGSTBEDRAG = base.Columns["OPBRENGSTBEDRAG"];
                this.columnOPBRENGSTVALUTA = base.Columns["OPBRENGSTVALUTA"];
                this.columnOPBRENGSTBTWCODE = base.Columns["OPBRENGSTBTWCODE"];
                this.columnOPBRENGSTBTWBEDRAG = base.Columns["OPBRENGSTBTWBEDRAG"];
                this.columnOPBRENGSTRELATIE = base.Columns["OPBRENGSTRELATIE"];
                this.columnOPBRENGSTOMSCHRIJVING = base.Columns["OPBRENGSTOMSCHRIJVING"];
                this.columnIFACTUURREGELNUMMER = base.Columns["IFACTUURREGELNUMMER"];
                this.columnUFACTUURREGELNUMMER = base.Columns["UFACTUURREGELNUMMER"];
                this.columnMEDEWERKER = base.Columns["MEDEWERKER"];
                this.columnUFACTUURNUMMER = base.Columns["UFACTUURNUMMER"];
                this.columnIFACTUURNUMMER = base.Columns["IFACTUURNUMMER"];
                this.columnUFACTUURREGELPRINTEN = base.Columns["UFACTUURREGELPRINTEN"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnFACTUREREN = base.Columns["FACTUREREN"];
                this.columnVOLGORDE = base.Columns["VOLGORDE"];
                this.columnOPBRENGSTWISSELKOERS = base.Columns["OPBRENGSTWISSELKOERS"];
                this.columnOPBRENGSTBEDRAGEURO = base.Columns["OPBRENGSTBEDRAGEURO"];
                this.columnKOSTWISSELKOERS = base.Columns["KOSTWISSELKOERS"];
                this.columnKOSTBEDRAGEURO = base.Columns["KOSTBEDRAGEURO"];
                this.columnROWOPEN = base.Columns["ROWOPEN"];
                this.columnROWOPENBY = base.Columns["ROWOPENBY"];
                this.columnBTWREGEL = base.Columns["BTWREGEL"];
                this.columnCREDITCRNUMBER = base.Columns["CREDITCRNUMBER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnKONUMMER = new global::System.Data.DataColumn("KONUMMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKONUMMER);
                this.columnDOSSIERNUMMER = new global::System.Data.DataColumn("DOSSIERNUMMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOSSIERNUMMER);
                this.columnKOSTCODE = new global::System.Data.DataColumn("KOSTCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTCODE);
                this.columnOMSCHRIJVING = new global::System.Data.DataColumn("OMSCHRIJVING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOMSCHRIJVING);
                this.columnFACTUURVALUTA = new global::System.Data.DataColumn("FACTUURVALUTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACTUURVALUTA);
                this.columnKOSTPRIJS = new global::System.Data.DataColumn("KOSTPRIJS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTPRIJS);
                this.columnKOSTAANTAL = new global::System.Data.DataColumn("KOSTAANTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTAANTAL);
                this.columnKOSTBEDRAG = new global::System.Data.DataColumn("KOSTBEDRAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTBEDRAG);
                this.columnKOSTVALUTA = new global::System.Data.DataColumn("KOSTVALUTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTVALUTA);
                this.columnKOSTBTWCODE = new global::System.Data.DataColumn("KOSTBTWCODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTBTWCODE);
                this.columnKOSTBTWBEDRAG = new global::System.Data.DataColumn("KOSTBTWBEDRAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTBTWBEDRAG);
                this.columnKOSTRELATIE = new global::System.Data.DataColumn("KOSTRELATIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTRELATIE);
                this.columnKOSTOMSCHRIJVING = new global::System.Data.DataColumn("KOSTOMSCHRIJVING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTOMSCHRIJVING);
                this.columnOPBRENGSTPRIJS = new global::System.Data.DataColumn("OPBRENGSTPRIJS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTPRIJS);
                this.columnOPBRENGSTAANTAL = new global::System.Data.DataColumn("OPBRENGSTAANTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTAANTAL);
                this.columnOPBRENGSTBEDRAG = new global::System.Data.DataColumn("OPBRENGSTBEDRAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTBEDRAG);
                this.columnOPBRENGSTVALUTA = new global::System.Data.DataColumn("OPBRENGSTVALUTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTVALUTA);
                this.columnOPBRENGSTBTWCODE = new global::System.Data.DataColumn("OPBRENGSTBTWCODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTBTWCODE);
                this.columnOPBRENGSTBTWBEDRAG = new global::System.Data.DataColumn("OPBRENGSTBTWBEDRAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTBTWBEDRAG);
                this.columnOPBRENGSTRELATIE = new global::System.Data.DataColumn("OPBRENGSTRELATIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTRELATIE);
                this.columnOPBRENGSTOMSCHRIJVING = new global::System.Data.DataColumn("OPBRENGSTOMSCHRIJVING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTOMSCHRIJVING);
                this.columnIFACTUURREGELNUMMER = new global::System.Data.DataColumn("IFACTUURREGELNUMMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIFACTUURREGELNUMMER);
                this.columnUFACTUURREGELNUMMER = new global::System.Data.DataColumn("UFACTUURREGELNUMMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUFACTUURREGELNUMMER);
                this.columnMEDEWERKER = new global::System.Data.DataColumn("MEDEWERKER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDEWERKER);
                this.columnUFACTUURNUMMER = new global::System.Data.DataColumn("UFACTUURNUMMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUFACTUURNUMMER);
                this.columnIFACTUURNUMMER = new global::System.Data.DataColumn("IFACTUURNUMMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIFACTUURNUMMER);
                this.columnUFACTUURREGELPRINTEN = new global::System.Data.DataColumn("UFACTUURREGELPRINTEN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUFACTUURREGELPRINTEN);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnFACTUREREN = new global::System.Data.DataColumn("FACTUREREN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACTUREREN);
                this.columnVOLGORDE = new global::System.Data.DataColumn("VOLGORDE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOLGORDE);
                this.columnOPBRENGSTWISSELKOERS = new global::System.Data.DataColumn("OPBRENGSTWISSELKOERS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTWISSELKOERS);
                this.columnOPBRENGSTBEDRAGEURO = new global::System.Data.DataColumn("OPBRENGSTBEDRAGEURO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPBRENGSTBEDRAGEURO);
                this.columnKOSTWISSELKOERS = new global::System.Data.DataColumn("KOSTWISSELKOERS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTWISSELKOERS);
                this.columnKOSTBEDRAGEURO = new global::System.Data.DataColumn("KOSTBEDRAGEURO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOSTBEDRAGEURO);
                this.columnROWOPEN = new global::System.Data.DataColumn("ROWOPEN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROWOPEN);
                this.columnROWOPENBY = new global::System.Data.DataColumn("ROWOPENBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROWOPENBY);
                this.columnBTWREGEL = new global::System.Data.DataColumn("BTWREGEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTWREGEL);
                this.columnCREDITCRNUMBER = new global::System.Data.DataColumn("CREDITCRNUMBER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREDITCRNUMBER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKONUMMER}, true));
                this.columnKONUMMER.AutoIncrement = true;
                this.columnKONUMMER.AutoIncrementSeed = -1;
                this.columnKONUMMER.AutoIncrementStep = -1;
                this.columnKONUMMER.AllowDBNull = false;
                this.columnKONUMMER.ReadOnly = true;
                this.columnKONUMMER.Unique = true;
                this.columnKOSTCODE.MaxLength = 8;
                this.columnOMSCHRIJVING.MaxLength = 2147483647;
                this.columnFACTUURVALUTA.MaxLength = 3;
                this.columnKOSTVALUTA.MaxLength = 3;
                this.columnKOSTRELATIE.MaxLength = 8;
                this.columnKOSTOMSCHRIJVING.MaxLength = 2147483647;
                this.columnOPBRENGSTVALUTA.MaxLength = 3;
                this.columnOPBRENGSTRELATIE.MaxLength = 8;
                this.columnOPBRENGSTOMSCHRIJVING.MaxLength = 2147483647;
                this.columnMEDEWERKER.MaxLength = 50;
                this.columnROWOPENBY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenRow NewKostenOpbrengstenRow() {
                return ((KostenOpbrengstenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KostenOpbrengstenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KostenOpbrengstenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KostenOpbrengstenRowChanged != null)) {
                    this.KostenOpbrengstenRowChanged(this, new KostenOpbrengstenRowChangeEvent(((KostenOpbrengstenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KostenOpbrengstenRowChanging != null)) {
                    this.KostenOpbrengstenRowChanging(this, new KostenOpbrengstenRowChangeEvent(((KostenOpbrengstenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KostenOpbrengstenRowDeleted != null)) {
                    this.KostenOpbrengstenRowDeleted(this, new KostenOpbrengstenRowChangeEvent(((KostenOpbrengstenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KostenOpbrengstenRowDeleting != null)) {
                    this.KostenOpbrengstenRowDeleting(this, new KostenOpbrengstenRowChangeEvent(((KostenOpbrengstenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveKostenOpbrengstenRow(KostenOpbrengstenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SSLTESTDataSet1 ds = new SSLTESTDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KostenOpbrengstenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KostenOpbrengstenRow : global::System.Data.DataRow {
            
            private KostenOpbrengstenDataTable tableKostenOpbrengsten;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal KostenOpbrengstenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKostenOpbrengsten = ((KostenOpbrengstenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int KONUMMER {
                get {
                    return ((int)(this[this.tableKostenOpbrengsten.KONUMMERColumn]));
                }
                set {
                    this[this.tableKostenOpbrengsten.KONUMMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DOSSIERNUMMER {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.DOSSIERNUMMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOSSIERNUMMER\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.DOSSIERNUMMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KOSTCODE {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.KOSTCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTCODE\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OMSCHRIJVING {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.OMSCHRIJVINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OMSCHRIJVING\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OMSCHRIJVINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FACTUURVALUTA {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.FACTUURVALUTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACTUURVALUTA\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.FACTUURVALUTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOSTPRIJS {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.KOSTPRIJSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTPRIJS\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTPRIJSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOSTAANTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.KOSTAANTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTAANTAL\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTAANTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOSTBEDRAG {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.KOSTBEDRAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTBEDRAG\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTBEDRAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KOSTVALUTA {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.KOSTVALUTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTVALUTA\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTVALUTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int KOSTBTWCODE {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.KOSTBTWCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTBTWCODE\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTBTWCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOSTBTWBEDRAG {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.KOSTBTWBEDRAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTBTWBEDRAG\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTBTWBEDRAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KOSTRELATIE {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.KOSTRELATIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTRELATIE\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTRELATIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KOSTOMSCHRIJVING {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.KOSTOMSCHRIJVINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTOMSCHRIJVING\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTOMSCHRIJVINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OPBRENGSTPRIJS {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.OPBRENGSTPRIJSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTPRIJS\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTPRIJSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OPBRENGSTAANTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.OPBRENGSTAANTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTAANTAL\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTAANTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OPBRENGSTBEDRAG {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.OPBRENGSTBEDRAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTBEDRAG\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTBEDRAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OPBRENGSTVALUTA {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.OPBRENGSTVALUTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTVALUTA\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTVALUTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int OPBRENGSTBTWCODE {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.OPBRENGSTBTWCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTBTWCODE\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTBTWCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OPBRENGSTBTWBEDRAG {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.OPBRENGSTBTWBEDRAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTBTWBEDRAG\' in table \'KostenOpbrengsten\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTBTWBEDRAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OPBRENGSTRELATIE {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.OPBRENGSTRELATIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTRELATIE\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTRELATIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OPBRENGSTOMSCHRIJVING {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.OPBRENGSTOMSCHRIJVINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTOMSCHRIJVING\' in table \'KostenOpbrengsten\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTOMSCHRIJVINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IFACTUURREGELNUMMER {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.IFACTUURREGELNUMMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IFACTUURREGELNUMMER\' in table \'KostenOpbrengsten\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.IFACTUURREGELNUMMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int UFACTUURREGELNUMMER {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.UFACTUURREGELNUMMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UFACTUURREGELNUMMER\' in table \'KostenOpbrengsten\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.UFACTUURREGELNUMMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MEDEWERKER {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.MEDEWERKERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEDEWERKER\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.MEDEWERKERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int UFACTUURNUMMER {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.UFACTUURNUMMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UFACTUURNUMMER\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.UFACTUURNUMMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IFACTUURNUMMER {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.IFACTUURNUMMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IFACTUURNUMMER\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.IFACTUURNUMMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool UFACTUURREGELPRINTEN {
                get {
                    try {
                        return ((bool)(this[this.tableKostenOpbrengsten.UFACTUURREGELPRINTENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UFACTUURREGELPRINTEN\' in table \'KostenOpbrengsten\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.UFACTUURREGELPRINTENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DATUM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableKostenOpbrengsten.DATUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATUM\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool FACTUREREN {
                get {
                    try {
                        return ((bool)(this[this.tableKostenOpbrengsten.FACTURERENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FACTUREREN\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.FACTURERENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int VOLGORDE {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.VOLGORDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VOLGORDE\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.VOLGORDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OPBRENGSTWISSELKOERS {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.OPBRENGSTWISSELKOERSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTWISSELKOERS\' in table \'KostenOpbrengsten\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTWISSELKOERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OPBRENGSTBEDRAGEURO {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.OPBRENGSTBEDRAGEUROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPBRENGSTBEDRAGEURO\' in table \'KostenOpbrengsten\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.OPBRENGSTBEDRAGEUROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOSTWISSELKOERS {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.KOSTWISSELKOERSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTWISSELKOERS\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTWISSELKOERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOSTBEDRAGEURO {
                get {
                    try {
                        return ((decimal)(this[this.tableKostenOpbrengsten.KOSTBEDRAGEUROColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOSTBEDRAGEURO\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.KOSTBEDRAGEUROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool ROWOPEN {
                get {
                    try {
                        return ((bool)(this[this.tableKostenOpbrengsten.ROWOPENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROWOPEN\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.ROWOPENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ROWOPENBY {
                get {
                    try {
                        return ((string)(this[this.tableKostenOpbrengsten.ROWOPENBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROWOPENBY\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.ROWOPENBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool BTWREGEL {
                get {
                    try {
                        return ((bool)(this[this.tableKostenOpbrengsten.BTWREGELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BTWREGEL\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.BTWREGELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CREDITCRNUMBER {
                get {
                    try {
                        return ((int)(this[this.tableKostenOpbrengsten.CREDITCRNUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREDITCRNUMBER\' in table \'KostenOpbrengsten\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKostenOpbrengsten.CREDITCRNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDOSSIERNUMMERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.DOSSIERNUMMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDOSSIERNUMMERNull() {
                this[this.tableKostenOpbrengsten.DOSSIERNUMMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTCODENull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTCODENull() {
                this[this.tableKostenOpbrengsten.KOSTCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOMSCHRIJVINGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OMSCHRIJVINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOMSCHRIJVINGNull() {
                this[this.tableKostenOpbrengsten.OMSCHRIJVINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFACTUURVALUTANull() {
                return this.IsNull(this.tableKostenOpbrengsten.FACTUURVALUTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFACTUURVALUTANull() {
                this[this.tableKostenOpbrengsten.FACTUURVALUTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTPRIJSNull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTPRIJSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTPRIJSNull() {
                this[this.tableKostenOpbrengsten.KOSTPRIJSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTAANTALNull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTAANTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTAANTALNull() {
                this[this.tableKostenOpbrengsten.KOSTAANTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTBEDRAGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTBEDRAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTBEDRAGNull() {
                this[this.tableKostenOpbrengsten.KOSTBEDRAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTVALUTANull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTVALUTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTVALUTANull() {
                this[this.tableKostenOpbrengsten.KOSTVALUTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTBTWCODENull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTBTWCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTBTWCODENull() {
                this[this.tableKostenOpbrengsten.KOSTBTWCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTBTWBEDRAGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTBTWBEDRAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTBTWBEDRAGNull() {
                this[this.tableKostenOpbrengsten.KOSTBTWBEDRAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTRELATIENull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTRELATIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTRELATIENull() {
                this[this.tableKostenOpbrengsten.KOSTRELATIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTOMSCHRIJVINGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTOMSCHRIJVINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTOMSCHRIJVINGNull() {
                this[this.tableKostenOpbrengsten.KOSTOMSCHRIJVINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTPRIJSNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTPRIJSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTPRIJSNull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTPRIJSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTAANTALNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTAANTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTAANTALNull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTAANTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTBEDRAGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTBEDRAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTBEDRAGNull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTBEDRAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTVALUTANull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTVALUTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTVALUTANull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTVALUTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTBTWCODENull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTBTWCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTBTWCODENull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTBTWCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTBTWBEDRAGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTBTWBEDRAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTBTWBEDRAGNull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTBTWBEDRAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTRELATIENull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTRELATIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTRELATIENull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTRELATIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTOMSCHRIJVINGNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTOMSCHRIJVINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTOMSCHRIJVINGNull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTOMSCHRIJVINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIFACTUURREGELNUMMERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.IFACTUURREGELNUMMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIFACTUURREGELNUMMERNull() {
                this[this.tableKostenOpbrengsten.IFACTUURREGELNUMMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUFACTUURREGELNUMMERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.UFACTUURREGELNUMMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUFACTUURREGELNUMMERNull() {
                this[this.tableKostenOpbrengsten.UFACTUURREGELNUMMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMEDEWERKERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.MEDEWERKERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMEDEWERKERNull() {
                this[this.tableKostenOpbrengsten.MEDEWERKERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUFACTUURNUMMERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.UFACTUURNUMMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUFACTUURNUMMERNull() {
                this[this.tableKostenOpbrengsten.UFACTUURNUMMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIFACTUURNUMMERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.IFACTUURNUMMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIFACTUURNUMMERNull() {
                this[this.tableKostenOpbrengsten.IFACTUURNUMMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUFACTUURREGELPRINTENNull() {
                return this.IsNull(this.tableKostenOpbrengsten.UFACTUURREGELPRINTENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUFACTUURREGELPRINTENNull() {
                this[this.tableKostenOpbrengsten.UFACTUURREGELPRINTENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDATUMNull() {
                return this.IsNull(this.tableKostenOpbrengsten.DATUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDATUMNull() {
                this[this.tableKostenOpbrengsten.DATUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFACTURERENNull() {
                return this.IsNull(this.tableKostenOpbrengsten.FACTURERENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFACTURERENNull() {
                this[this.tableKostenOpbrengsten.FACTURERENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVOLGORDENull() {
                return this.IsNull(this.tableKostenOpbrengsten.VOLGORDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVOLGORDENull() {
                this[this.tableKostenOpbrengsten.VOLGORDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTWISSELKOERSNull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTWISSELKOERSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTWISSELKOERSNull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTWISSELKOERSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOPBRENGSTBEDRAGEURONull() {
                return this.IsNull(this.tableKostenOpbrengsten.OPBRENGSTBEDRAGEUROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOPBRENGSTBEDRAGEURONull() {
                this[this.tableKostenOpbrengsten.OPBRENGSTBEDRAGEUROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTWISSELKOERSNull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTWISSELKOERSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTWISSELKOERSNull() {
                this[this.tableKostenOpbrengsten.KOSTWISSELKOERSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKOSTBEDRAGEURONull() {
                return this.IsNull(this.tableKostenOpbrengsten.KOSTBEDRAGEUROColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKOSTBEDRAGEURONull() {
                this[this.tableKostenOpbrengsten.KOSTBEDRAGEUROColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROWOPENNull() {
                return this.IsNull(this.tableKostenOpbrengsten.ROWOPENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROWOPENNull() {
                this[this.tableKostenOpbrengsten.ROWOPENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROWOPENBYNull() {
                return this.IsNull(this.tableKostenOpbrengsten.ROWOPENBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROWOPENBYNull() {
                this[this.tableKostenOpbrengsten.ROWOPENBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBTWREGELNull() {
                return this.IsNull(this.tableKostenOpbrengsten.BTWREGELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBTWREGELNull() {
                this[this.tableKostenOpbrengsten.BTWREGELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCREDITCRNUMBERNull() {
                return this.IsNull(this.tableKostenOpbrengsten.CREDITCRNUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCREDITCRNUMBERNull() {
                this[this.tableKostenOpbrengsten.CREDITCRNUMBERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class KostenOpbrengstenRowChangeEvent : global::System.EventArgs {
            
            private KostenOpbrengstenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenRowChangeEvent(KostenOpbrengstenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public KostenOpbrengstenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CookbookDevxCsharp.SSLTESTDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KostenOpbrengstenTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public KostenOpbrengstenTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KostenOpbrengsten";
            tableMapping.ColumnMappings.Add("KONUMMER", "KONUMMER");
            tableMapping.ColumnMappings.Add("DOSSIERNUMMER", "DOSSIERNUMMER");
            tableMapping.ColumnMappings.Add("KOSTCODE", "KOSTCODE");
            tableMapping.ColumnMappings.Add("OMSCHRIJVING", "OMSCHRIJVING");
            tableMapping.ColumnMappings.Add("FACTUURVALUTA", "FACTUURVALUTA");
            tableMapping.ColumnMappings.Add("KOSTPRIJS", "KOSTPRIJS");
            tableMapping.ColumnMappings.Add("KOSTAANTAL", "KOSTAANTAL");
            tableMapping.ColumnMappings.Add("KOSTBEDRAG", "KOSTBEDRAG");
            tableMapping.ColumnMappings.Add("KOSTVALUTA", "KOSTVALUTA");
            tableMapping.ColumnMappings.Add("KOSTBTWCODE", "KOSTBTWCODE");
            tableMapping.ColumnMappings.Add("KOSTBTWBEDRAG", "KOSTBTWBEDRAG");
            tableMapping.ColumnMappings.Add("KOSTRELATIE", "KOSTRELATIE");
            tableMapping.ColumnMappings.Add("KOSTOMSCHRIJVING", "KOSTOMSCHRIJVING");
            tableMapping.ColumnMappings.Add("OPBRENGSTPRIJS", "OPBRENGSTPRIJS");
            tableMapping.ColumnMappings.Add("OPBRENGSTAANTAL", "OPBRENGSTAANTAL");
            tableMapping.ColumnMappings.Add("OPBRENGSTBEDRAG", "OPBRENGSTBEDRAG");
            tableMapping.ColumnMappings.Add("OPBRENGSTVALUTA", "OPBRENGSTVALUTA");
            tableMapping.ColumnMappings.Add("OPBRENGSTBTWCODE", "OPBRENGSTBTWCODE");
            tableMapping.ColumnMappings.Add("OPBRENGSTBTWBEDRAG", "OPBRENGSTBTWBEDRAG");
            tableMapping.ColumnMappings.Add("OPBRENGSTRELATIE", "OPBRENGSTRELATIE");
            tableMapping.ColumnMappings.Add("OPBRENGSTOMSCHRIJVING", "OPBRENGSTOMSCHRIJVING");
            tableMapping.ColumnMappings.Add("IFACTUURREGELNUMMER", "IFACTUURREGELNUMMER");
            tableMapping.ColumnMappings.Add("UFACTUURREGELNUMMER", "UFACTUURREGELNUMMER");
            tableMapping.ColumnMappings.Add("MEDEWERKER", "MEDEWERKER");
            tableMapping.ColumnMappings.Add("UFACTUURNUMMER", "UFACTUURNUMMER");
            tableMapping.ColumnMappings.Add("IFACTUURNUMMER", "IFACTUURNUMMER");
            tableMapping.ColumnMappings.Add("UFACTUURREGELPRINTEN", "UFACTUURREGELPRINTEN");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("FACTUREREN", "FACTUREREN");
            tableMapping.ColumnMappings.Add("VOLGORDE", "VOLGORDE");
            tableMapping.ColumnMappings.Add("OPBRENGSTWISSELKOERS", "OPBRENGSTWISSELKOERS");
            tableMapping.ColumnMappings.Add("OPBRENGSTBEDRAGEURO", "OPBRENGSTBEDRAGEURO");
            tableMapping.ColumnMappings.Add("KOSTWISSELKOERS", "KOSTWISSELKOERS");
            tableMapping.ColumnMappings.Add("KOSTBEDRAGEURO", "KOSTBEDRAGEURO");
            tableMapping.ColumnMappings.Add("ROWOPEN", "ROWOPEN");
            tableMapping.ColumnMappings.Add("ROWOPENBY", "ROWOPENBY");
            tableMapping.ColumnMappings.Add("BTWREGEL", "BTWREGEL");
            tableMapping.ColumnMappings.Add("CREDITCRNUMBER", "CREDITCRNUMBER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KostenOpbrengsten] WHERE (([KONUMMER] = @Original_KONUMMER) AN" +
                "D ((@IsNull_DOSSIERNUMMER = 1 AND [DOSSIERNUMMER] IS NULL) OR ([DOSSIERNUMMER] =" +
                " @Original_DOSSIERNUMMER)) AND ((@IsNull_KOSTCODE = 1 AND [KOSTCODE] IS NULL) OR" +
                " ([KOSTCODE] = @Original_KOSTCODE)) AND ((@IsNull_FACTUURVALUTA = 1 AND [FACTUUR" +
                "VALUTA] IS NULL) OR ([FACTUURVALUTA] = @Original_FACTUURVALUTA)) AND ((@IsNull_K" +
                "OSTPRIJS = 1 AND [KOSTPRIJS] IS NULL) OR ([KOSTPRIJS] = @Original_KOSTPRIJS)) AN" +
                "D ((@IsNull_KOSTAANTAL = 1 AND [KOSTAANTAL] IS NULL) OR ([KOSTAANTAL] = @Origina" +
                "l_KOSTAANTAL)) AND ((@IsNull_KOSTBEDRAG = 1 AND [KOSTBEDRAG] IS NULL) OR ([KOSTB" +
                "EDRAG] = @Original_KOSTBEDRAG)) AND ((@IsNull_KOSTVALUTA = 1 AND [KOSTVALUTA] IS" +
                " NULL) OR ([KOSTVALUTA] = @Original_KOSTVALUTA)) AND ((@IsNull_KOSTBTWCODE = 1 A" +
                "ND [KOSTBTWCODE] IS NULL) OR ([KOSTBTWCODE] = @Original_KOSTBTWCODE)) AND ((@IsN" +
                "ull_KOSTBTWBEDRAG = 1 AND [KOSTBTWBEDRAG] IS NULL) OR ([KOSTBTWBEDRAG] = @Origin" +
                "al_KOSTBTWBEDRAG)) AND ((@IsNull_KOSTRELATIE = 1 AND [KOSTRELATIE] IS NULL) OR (" +
                "[KOSTRELATIE] = @Original_KOSTRELATIE)) AND ((@IsNull_OPBRENGSTPRIJS = 1 AND [OP" +
                "BRENGSTPRIJS] IS NULL) OR ([OPBRENGSTPRIJS] = @Original_OPBRENGSTPRIJS)) AND ((@" +
                "IsNull_OPBRENGSTAANTAL = 1 AND [OPBRENGSTAANTAL] IS NULL) OR ([OPBRENGSTAANTAL] " +
                "= @Original_OPBRENGSTAANTAL)) AND ((@IsNull_OPBRENGSTBEDRAG = 1 AND [OPBRENGSTBE" +
                "DRAG] IS NULL) OR ([OPBRENGSTBEDRAG] = @Original_OPBRENGSTBEDRAG)) AND ((@IsNull" +
                "_OPBRENGSTVALUTA = 1 AND [OPBRENGSTVALUTA] IS NULL) OR ([OPBRENGSTVALUTA] = @Ori" +
                "ginal_OPBRENGSTVALUTA)) AND ((@IsNull_OPBRENGSTBTWCODE = 1 AND [OPBRENGSTBTWCODE" +
                "] IS NULL) OR ([OPBRENGSTBTWCODE] = @Original_OPBRENGSTBTWCODE)) AND ((@IsNull_O" +
                "PBRENGSTBTWBEDRAG = 1 AND [OPBRENGSTBTWBEDRAG] IS NULL) OR ([OPBRENGSTBTWBEDRAG]" +
                " = @Original_OPBRENGSTBTWBEDRAG)) AND ((@IsNull_OPBRENGSTRELATIE = 1 AND [OPBREN" +
                "GSTRELATIE] IS NULL) OR ([OPBRENGSTRELATIE] = @Original_OPBRENGSTRELATIE)) AND (" +
                "(@IsNull_IFACTUURREGELNUMMER = 1 AND [IFACTUURREGELNUMMER] IS NULL) OR ([IFACTUU" +
                "RREGELNUMMER] = @Original_IFACTUURREGELNUMMER)) AND ((@IsNull_UFACTUURREGELNUMME" +
                "R = 1 AND [UFACTUURREGELNUMMER] IS NULL) OR ([UFACTUURREGELNUMMER] = @Original_U" +
                "FACTUURREGELNUMMER)) AND ((@IsNull_MEDEWERKER = 1 AND [MEDEWERKER] IS NULL) OR (" +
                "[MEDEWERKER] = @Original_MEDEWERKER)) AND ((@IsNull_UFACTUURNUMMER = 1 AND [UFAC" +
                "TUURNUMMER] IS NULL) OR ([UFACTUURNUMMER] = @Original_UFACTUURNUMMER)) AND ((@Is" +
                "Null_IFACTUURNUMMER = 1 AND [IFACTUURNUMMER] IS NULL) OR ([IFACTUURNUMMER] = @Or" +
                "iginal_IFACTUURNUMMER)) AND ((@IsNull_UFACTUURREGELPRINTEN = 1 AND [UFACTUURREGE" +
                "LPRINTEN] IS NULL) OR ([UFACTUURREGELPRINTEN] = @Original_UFACTUURREGELPRINTEN))" +
                " AND ((@IsNull_DATUM = 1 AND [DATUM] IS NULL) OR ([DATUM] = @Original_DATUM)) AN" +
                "D ((@IsNull_FACTUREREN = 1 AND [FACTUREREN] IS NULL) OR ([FACTUREREN] = @Origina" +
                "l_FACTUREREN)) AND ((@IsNull_VOLGORDE = 1 AND [VOLGORDE] IS NULL) OR ([VOLGORDE]" +
                " = @Original_VOLGORDE)) AND ((@IsNull_OPBRENGSTWISSELKOERS = 1 AND [OPBRENGSTWIS" +
                "SELKOERS] IS NULL) OR ([OPBRENGSTWISSELKOERS] = @Original_OPBRENGSTWISSELKOERS))" +
                " AND ((@IsNull_OPBRENGSTBEDRAGEURO = 1 AND [OPBRENGSTBEDRAGEURO] IS NULL) OR ([O" +
                "PBRENGSTBEDRAGEURO] = @Original_OPBRENGSTBEDRAGEURO)) AND ((@IsNull_KOSTWISSELKO" +
                "ERS = 1 AND [KOSTWISSELKOERS] IS NULL) OR ([KOSTWISSELKOERS] = @Original_KOSTWIS" +
                "SELKOERS)) AND ((@IsNull_KOSTBEDRAGEURO = 1 AND [KOSTBEDRAGEURO] IS NULL) OR ([K" +
                "OSTBEDRAGEURO] = @Original_KOSTBEDRAGEURO)) AND ((@IsNull_ROWOPEN = 1 AND [ROWOP" +
                "EN] IS NULL) OR ([ROWOPEN] = @Original_ROWOPEN)) AND ((@IsNull_ROWOPENBY = 1 AND" +
                " [ROWOPENBY] IS NULL) OR ([ROWOPENBY] = @Original_ROWOPENBY)) AND ((@IsNull_BTWR" +
                "EGEL = 1 AND [BTWREGEL] IS NULL) OR ([BTWREGEL] = @Original_BTWREGEL)) AND ((@Is" +
                "Null_CREDITCRNUMBER = 1 AND [CREDITCRNUMBER] IS NULL) OR ([CREDITCRNUMBER] = @Or" +
                "iginal_CREDITCRNUMBER)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KONUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KONUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOSSIERNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOSSIERNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOSSIERNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOSSIERNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FACTUURVALUTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUURVALUTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FACTUURVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUURVALUTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTPRIJS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTPRIJS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTPRIJS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTAANTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTAANTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTAANTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTVALUTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTVALUTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTVALUTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBTWBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTRELATIE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTRELATIE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTRELATIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTPRIJS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTPRIJS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTPRIJS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTAANTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTAANTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTAANTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTVALUTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTVALUTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTVALUTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBTWBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTRELATIE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTRELATIE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTRELATIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEDEWERKER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDEWERKER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEDEWERKER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDEWERKER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UFACTUURREGELPRINTEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELPRINTEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UFACTUURREGELPRINTEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELPRINTEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FACTUREREN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUREREN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FACTUREREN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUREREN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VOLGORDE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VOLGORDE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VOLGORDE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VOLGORDE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTWISSELKOERS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTWISSELKOERS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "OPBRENGSTWISSELKOERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBEDRAGEURO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTWISSELKOERS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTWISSELKOERS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "KOSTWISSELKOERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBEDRAGEURO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROWOPEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROWOPEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROWOPENBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPENBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROWOPENBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPENBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BTWREGEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTWREGEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTWREGEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTWREGEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREDITCRNUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREDITCRNUMBER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREDITCRNUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREDITCRNUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KostenOpbrengsten] ([DOSSIERNUMMER], [KOSTCODE], [OMSCHRIJVING" +
                "], [FACTUURVALUTA], [KOSTPRIJS], [KOSTAANTAL], [KOSTBEDRAG], [KOSTVALUTA], [KOST" +
                "BTWCODE], [KOSTBTWBEDRAG], [KOSTRELATIE], [KOSTOMSCHRIJVING], [OPBRENGSTPRIJS], " +
                "[OPBRENGSTAANTAL], [OPBRENGSTBEDRAG], [OPBRENGSTVALUTA], [OPBRENGSTBTWCODE], [OP" +
                "BRENGSTBTWBEDRAG], [OPBRENGSTRELATIE], [OPBRENGSTOMSCHRIJVING], [IFACTUURREGELNU" +
                "MMER], [UFACTUURREGELNUMMER], [MEDEWERKER], [UFACTUURNUMMER], [IFACTUURNUMMER], " +
                "[UFACTUURREGELPRINTEN], [DATUM], [FACTUREREN], [VOLGORDE], [OPBRENGSTWISSELKOERS" +
                "], [OPBRENGSTBEDRAGEURO], [KOSTWISSELKOERS], [KOSTBEDRAGEURO], [ROWOPEN], [ROWOP" +
                "ENBY], [BTWREGEL], [CREDITCRNUMBER]) VALUES (@DOSSIERNUMMER, @KOSTCODE, @OMSCHRI" +
                "JVING, @FACTUURVALUTA, @KOSTPRIJS, @KOSTAANTAL, @KOSTBEDRAG, @KOSTVALUTA, @KOSTB" +
                "TWCODE, @KOSTBTWBEDRAG, @KOSTRELATIE, @KOSTOMSCHRIJVING, @OPBRENGSTPRIJS, @OPBRE" +
                "NGSTAANTAL, @OPBRENGSTBEDRAG, @OPBRENGSTVALUTA, @OPBRENGSTBTWCODE, @OPBRENGSTBTW" +
                "BEDRAG, @OPBRENGSTRELATIE, @OPBRENGSTOMSCHRIJVING, @IFACTUURREGELNUMMER, @UFACTU" +
                "URREGELNUMMER, @MEDEWERKER, @UFACTUURNUMMER, @IFACTUURNUMMER, @UFACTUURREGELPRIN" +
                "TEN, @DATUM, @FACTUREREN, @VOLGORDE, @OPBRENGSTWISSELKOERS, @OPBRENGSTBEDRAGEURO" +
                ", @KOSTWISSELKOERS, @KOSTBEDRAGEURO, @ROWOPEN, @ROWOPENBY, @BTWREGEL, @CREDITCRN" +
                "UMBER);\r\nSELECT KONUMMER, DOSSIERNUMMER, KOSTCODE, OMSCHRIJVING, FACTUURVALUTA, " +
                "KOSTPRIJS, KOSTAANTAL, KOSTBEDRAG, KOSTVALUTA, KOSTBTWCODE, KOSTBTWBEDRAG, KOSTR" +
                "ELATIE, KOSTOMSCHRIJVING, OPBRENGSTPRIJS, OPBRENGSTAANTAL, OPBRENGSTBEDRAG, OPBR" +
                "ENGSTVALUTA, OPBRENGSTBTWCODE, OPBRENGSTBTWBEDRAG, OPBRENGSTRELATIE, OPBRENGSTOM" +
                "SCHRIJVING, IFACTUURREGELNUMMER, UFACTUURREGELNUMMER, MEDEWERKER, UFACTUURNUMMER" +
                ", IFACTUURNUMMER, UFACTUURREGELPRINTEN, DATUM, FACTUREREN, VOLGORDE, OPBRENGSTWI" +
                "SSELKOERS, OPBRENGSTBEDRAGEURO, KOSTWISSELKOERS, KOSTBEDRAGEURO, ROWOPEN, ROWOPE" +
                "NBY, BTWREGEL, CREDITCRNUMBER FROM KostenOpbrengsten WHERE (KONUMMER = SCOPE_IDE" +
                "NTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOSSIERNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOSSIERNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OMSCHRIJVING", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OMSCHRIJVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FACTUURVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUURVALUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTPRIJS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTAANTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTVALUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBTWBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTRELATIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTOMSCHRIJVING", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTOMSCHRIJVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTPRIJS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTAANTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTVALUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBTWBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTRELATIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTOMSCHRIJVING", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTOMSCHRIJVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEDEWERKER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDEWERKER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UFACTUURREGELPRINTEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELPRINTEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FACTUREREN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUREREN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VOLGORDE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VOLGORDE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "OPBRENGSTWISSELKOERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAGEURO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "KOSTWISSELKOERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAGEURO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROWOPEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROWOPENBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPENBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTWREGEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTWREGEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREDITCRNUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREDITCRNUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[KostenOpbrengsten] SET [DOSSIERNUMMER] = @DOSSIERNUMMER, [KOSTCODE]" +
                " = @KOSTCODE, [OMSCHRIJVING] = @OMSCHRIJVING, [FACTUURVALUTA] = @FACTUURVALUTA, " +
                "[KOSTPRIJS] = @KOSTPRIJS, [KOSTAANTAL] = @KOSTAANTAL, [KOSTBEDRAG] = @KOSTBEDRAG" +
                ", [KOSTVALUTA] = @KOSTVALUTA, [KOSTBTWCODE] = @KOSTBTWCODE, [KOSTBTWBEDRAG] = @K" +
                "OSTBTWBEDRAG, [KOSTRELATIE] = @KOSTRELATIE, [KOSTOMSCHRIJVING] = @KOSTOMSCHRIJVI" +
                "NG, [OPBRENGSTPRIJS] = @OPBRENGSTPRIJS, [OPBRENGSTAANTAL] = @OPBRENGSTAANTAL, [O" +
                "PBRENGSTBEDRAG] = @OPBRENGSTBEDRAG, [OPBRENGSTVALUTA] = @OPBRENGSTVALUTA, [OPBRE" +
                "NGSTBTWCODE] = @OPBRENGSTBTWCODE, [OPBRENGSTBTWBEDRAG] = @OPBRENGSTBTWBEDRAG, [O" +
                "PBRENGSTRELATIE] = @OPBRENGSTRELATIE, [OPBRENGSTOMSCHRIJVING] = @OPBRENGSTOMSCHR" +
                "IJVING, [IFACTUURREGELNUMMER] = @IFACTUURREGELNUMMER, [UFACTUURREGELNUMMER] = @U" +
                "FACTUURREGELNUMMER, [MEDEWERKER] = @MEDEWERKER, [UFACTUURNUMMER] = @UFACTUURNUMM" +
                "ER, [IFACTUURNUMMER] = @IFACTUURNUMMER, [UFACTUURREGELPRINTEN] = @UFACTUURREGELP" +
                "RINTEN, [DATUM] = @DATUM, [FACTUREREN] = @FACTUREREN, [VOLGORDE] = @VOLGORDE, [O" +
                "PBRENGSTWISSELKOERS] = @OPBRENGSTWISSELKOERS, [OPBRENGSTBEDRAGEURO] = @OPBRENGST" +
                "BEDRAGEURO, [KOSTWISSELKOERS] = @KOSTWISSELKOERS, [KOSTBEDRAGEURO] = @KOSTBEDRAG" +
                "EURO, [ROWOPEN] = @ROWOPEN, [ROWOPENBY] = @ROWOPENBY, [BTWREGEL] = @BTWREGEL, [C" +
                "REDITCRNUMBER] = @CREDITCRNUMBER WHERE (([KONUMMER] = @Original_KONUMMER) AND ((" +
                "@IsNull_DOSSIERNUMMER = 1 AND [DOSSIERNUMMER] IS NULL) OR ([DOSSIERNUMMER] = @Or" +
                "iginal_DOSSIERNUMMER)) AND ((@IsNull_KOSTCODE = 1 AND [KOSTCODE] IS NULL) OR ([K" +
                "OSTCODE] = @Original_KOSTCODE)) AND ((@IsNull_FACTUURVALUTA = 1 AND [FACTUURVALU" +
                "TA] IS NULL) OR ([FACTUURVALUTA] = @Original_FACTUURVALUTA)) AND ((@IsNull_KOSTP" +
                "RIJS = 1 AND [KOSTPRIJS] IS NULL) OR ([KOSTPRIJS] = @Original_KOSTPRIJS)) AND ((" +
                "@IsNull_KOSTAANTAL = 1 AND [KOSTAANTAL] IS NULL) OR ([KOSTAANTAL] = @Original_KO" +
                "STAANTAL)) AND ((@IsNull_KOSTBEDRAG = 1 AND [KOSTBEDRAG] IS NULL) OR ([KOSTBEDRA" +
                "G] = @Original_KOSTBEDRAG)) AND ((@IsNull_KOSTVALUTA = 1 AND [KOSTVALUTA] IS NUL" +
                "L) OR ([KOSTVALUTA] = @Original_KOSTVALUTA)) AND ((@IsNull_KOSTBTWCODE = 1 AND [" +
                "KOSTBTWCODE] IS NULL) OR ([KOSTBTWCODE] = @Original_KOSTBTWCODE)) AND ((@IsNull_" +
                "KOSTBTWBEDRAG = 1 AND [KOSTBTWBEDRAG] IS NULL) OR ([KOSTBTWBEDRAG] = @Original_K" +
                "OSTBTWBEDRAG)) AND ((@IsNull_KOSTRELATIE = 1 AND [KOSTRELATIE] IS NULL) OR ([KOS" +
                "TRELATIE] = @Original_KOSTRELATIE)) AND ((@IsNull_OPBRENGSTPRIJS = 1 AND [OPBREN" +
                "GSTPRIJS] IS NULL) OR ([OPBRENGSTPRIJS] = @Original_OPBRENGSTPRIJS)) AND ((@IsNu" +
                "ll_OPBRENGSTAANTAL = 1 AND [OPBRENGSTAANTAL] IS NULL) OR ([OPBRENGSTAANTAL] = @O" +
                "riginal_OPBRENGSTAANTAL)) AND ((@IsNull_OPBRENGSTBEDRAG = 1 AND [OPBRENGSTBEDRAG" +
                "] IS NULL) OR ([OPBRENGSTBEDRAG] = @Original_OPBRENGSTBEDRAG)) AND ((@IsNull_OPB" +
                "RENGSTVALUTA = 1 AND [OPBRENGSTVALUTA] IS NULL) OR ([OPBRENGSTVALUTA] = @Origina" +
                "l_OPBRENGSTVALUTA)) AND ((@IsNull_OPBRENGSTBTWCODE = 1 AND [OPBRENGSTBTWCODE] IS" +
                " NULL) OR ([OPBRENGSTBTWCODE] = @Original_OPBRENGSTBTWCODE)) AND ((@IsNull_OPBRE" +
                "NGSTBTWBEDRAG = 1 AND [OPBRENGSTBTWBEDRAG] IS NULL) OR ([OPBRENGSTBTWBEDRAG] = @" +
                "Original_OPBRENGSTBTWBEDRAG)) AND ((@IsNull_OPBRENGSTRELATIE = 1 AND [OPBRENGSTR" +
                "ELATIE] IS NULL) OR ([OPBRENGSTRELATIE] = @Original_OPBRENGSTRELATIE)) AND ((@Is" +
                "Null_IFACTUURREGELNUMMER = 1 AND [IFACTUURREGELNUMMER] IS NULL) OR ([IFACTUURREG" +
                "ELNUMMER] = @Original_IFACTUURREGELNUMMER)) AND ((@IsNull_UFACTUURREGELNUMMER = " +
                "1 AND [UFACTUURREGELNUMMER] IS NULL) OR ([UFACTUURREGELNUMMER] = @Original_UFACT" +
                "UURREGELNUMMER)) AND ((@IsNull_MEDEWERKER = 1 AND [MEDEWERKER] IS NULL) OR ([MED" +
                "EWERKER] = @Original_MEDEWERKER)) AND ((@IsNull_UFACTUURNUMMER = 1 AND [UFACTUUR" +
                "NUMMER] IS NULL) OR ([UFACTUURNUMMER] = @Original_UFACTUURNUMMER)) AND ((@IsNull" +
                "_IFACTUURNUMMER = 1 AND [IFACTUURNUMMER] IS NULL) OR ([IFACTUURNUMMER] = @Origin" +
                "al_IFACTUURNUMMER)) AND ((@IsNull_UFACTUURREGELPRINTEN = 1 AND [UFACTUURREGELPRI" +
                "NTEN] IS NULL) OR ([UFACTUURREGELPRINTEN] = @Original_UFACTUURREGELPRINTEN)) AND" +
                " ((@IsNull_DATUM = 1 AND [DATUM] IS NULL) OR ([DATUM] = @Original_DATUM)) AND ((" +
                "@IsNull_FACTUREREN = 1 AND [FACTUREREN] IS NULL) OR ([FACTUREREN] = @Original_FA" +
                "CTUREREN)) AND ((@IsNull_VOLGORDE = 1 AND [VOLGORDE] IS NULL) OR ([VOLGORDE] = @" +
                "Original_VOLGORDE)) AND ((@IsNull_OPBRENGSTWISSELKOERS = 1 AND [OPBRENGSTWISSELK" +
                "OERS] IS NULL) OR ([OPBRENGSTWISSELKOERS] = @Original_OPBRENGSTWISSELKOERS)) AND" +
                " ((@IsNull_OPBRENGSTBEDRAGEURO = 1 AND [OPBRENGSTBEDRAGEURO] IS NULL) OR ([OPBRE" +
                "NGSTBEDRAGEURO] = @Original_OPBRENGSTBEDRAGEURO)) AND ((@IsNull_KOSTWISSELKOERS " +
                "= 1 AND [KOSTWISSELKOERS] IS NULL) OR ([KOSTWISSELKOERS] = @Original_KOSTWISSELK" +
                "OERS)) AND ((@IsNull_KOSTBEDRAGEURO = 1 AND [KOSTBEDRAGEURO] IS NULL) OR ([KOSTB" +
                "EDRAGEURO] = @Original_KOSTBEDRAGEURO)) AND ((@IsNull_ROWOPEN = 1 AND [ROWOPEN] " +
                "IS NULL) OR ([ROWOPEN] = @Original_ROWOPEN)) AND ((@IsNull_ROWOPENBY = 1 AND [RO" +
                "WOPENBY] IS NULL) OR ([ROWOPENBY] = @Original_ROWOPENBY)) AND ((@IsNull_BTWREGEL" +
                " = 1 AND [BTWREGEL] IS NULL) OR ([BTWREGEL] = @Original_BTWREGEL)) AND ((@IsNull" +
                "_CREDITCRNUMBER = 1 AND [CREDITCRNUMBER] IS NULL) OR ([CREDITCRNUMBER] = @Origin" +
                "al_CREDITCRNUMBER)));\r\nSELECT KONUMMER, DOSSIERNUMMER, KOSTCODE, OMSCHRIJVING, F" +
                "ACTUURVALUTA, KOSTPRIJS, KOSTAANTAL, KOSTBEDRAG, KOSTVALUTA, KOSTBTWCODE, KOSTBT" +
                "WBEDRAG, KOSTRELATIE, KOSTOMSCHRIJVING, OPBRENGSTPRIJS, OPBRENGSTAANTAL, OPBRENG" +
                "STBEDRAG, OPBRENGSTVALUTA, OPBRENGSTBTWCODE, OPBRENGSTBTWBEDRAG, OPBRENGSTRELATI" +
                "E, OPBRENGSTOMSCHRIJVING, IFACTUURREGELNUMMER, UFACTUURREGELNUMMER, MEDEWERKER, " +
                "UFACTUURNUMMER, IFACTUURNUMMER, UFACTUURREGELPRINTEN, DATUM, FACTUREREN, VOLGORD" +
                "E, OPBRENGSTWISSELKOERS, OPBRENGSTBEDRAGEURO, KOSTWISSELKOERS, KOSTBEDRAGEURO, R" +
                "OWOPEN, ROWOPENBY, BTWREGEL, CREDITCRNUMBER FROM KostenOpbrengsten WHERE (KONUMM" +
                "ER = @KONUMMER)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOSSIERNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOSSIERNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OMSCHRIJVING", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OMSCHRIJVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FACTUURVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUURVALUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTPRIJS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTAANTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTVALUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBTWBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTRELATIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTOMSCHRIJVING", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTOMSCHRIJVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTPRIJS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTAANTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTVALUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBTWBEDRAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTRELATIE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTOMSCHRIJVING", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTOMSCHRIJVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEDEWERKER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDEWERKER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURNUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UFACTUURREGELPRINTEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELPRINTEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FACTUREREN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUREREN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VOLGORDE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VOLGORDE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "OPBRENGSTWISSELKOERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPBRENGSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAGEURO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "KOSTWISSELKOERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAGEURO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROWOPEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPEN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROWOPENBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPENBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTWREGEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTWREGEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREDITCRNUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREDITCRNUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KONUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KONUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOSSIERNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOSSIERNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOSSIERNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOSSIERNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FACTUURVALUTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUURVALUTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FACTUURVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUURVALUTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTPRIJS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTPRIJS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTPRIJS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTAANTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTAANTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTAANTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTVALUTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTVALUTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTVALUTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBTWBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTRELATIE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTRELATIE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTRELATIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTPRIJS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTPRIJS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTPRIJS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTPRIJS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTAANTAL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTAANTAL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTAANTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTAANTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTVALUTA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTVALUTA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTVALUTA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTVALUTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBTWCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBTWBEDRAG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBTWBEDRAG", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBTWBEDRAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTRELATIE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTRELATIE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTRELATIE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTRELATIE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UFACTUURREGELNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MEDEWERKER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDEWERKER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEDEWERKER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEDEWERKER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURNUMMER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IFACTUURNUMMER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IFACTUURNUMMER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UFACTUURREGELPRINTEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELPRINTEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UFACTUURREGELPRINTEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UFACTUURREGELPRINTEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATUM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATUM", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FACTUREREN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUREREN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FACTUREREN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FACTUREREN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VOLGORDE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VOLGORDE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VOLGORDE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VOLGORDE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTWISSELKOERS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTWISSELKOERS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "OPBRENGSTWISSELKOERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPBRENGSTBEDRAGEURO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPBRENGSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPBRENGSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OPBRENGSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTWISSELKOERS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTWISSELKOERS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTWISSELKOERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "KOSTWISSELKOERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KOSTBEDRAGEURO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KOSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOSTBEDRAGEURO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOSTBEDRAGEURO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROWOPEN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPEN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROWOPEN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPEN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ROWOPENBY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPENBY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROWOPENBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROWOPENBY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BTWREGEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTWREGEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTWREGEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTWREGEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CREDITCRNUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREDITCRNUMBER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREDITCRNUMBER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREDITCRNUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KONUMMER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "KONUMMER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CookbookDevxCsharp.Properties.Settings.Default.SSLTESTConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT KONUMMER, DOSSIERNUMMER, KOSTCODE, OMSCHRIJVING, FACTUURVALUTA, KOSTPRIJS, KOSTAANTAL, KOSTBEDRAG, KOSTVALUTA, KOSTBTWCODE, KOSTBTWBEDRAG, KOSTRELATIE, KOSTOMSCHRIJVING, OPBRENGSTPRIJS, OPBRENGSTAANTAL, OPBRENGSTBEDRAG, OPBRENGSTVALUTA, OPBRENGSTBTWCODE, OPBRENGSTBTWBEDRAG, OPBRENGSTRELATIE, OPBRENGSTOMSCHRIJVING, IFACTUURREGELNUMMER, UFACTUURREGELNUMMER, MEDEWERKER, UFACTUURNUMMER, IFACTUURNUMMER, UFACTUURREGELPRINTEN, DATUM, FACTUREREN, VOLGORDE, OPBRENGSTWISSELKOERS, OPBRENGSTBEDRAGEURO, KOSTWISSELKOERS, KOSTBEDRAGEURO, ROWOPEN, ROWOPENBY, BTWREGEL, CREDITCRNUMBER FROM dbo.KostenOpbrengsten";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SSLTESTDataSet1.KostenOpbrengstenDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SSLTESTDataSet1.KostenOpbrengstenDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SSLTESTDataSet1.KostenOpbrengstenDataTable dataTable = new SSLTESTDataSet1.KostenOpbrengstenDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SSLTESTDataSet1.KostenOpbrengstenDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SSLTESTDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "KostenOpbrengsten");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_KONUMMER, 
                    global::System.Nullable<int> Original_DOSSIERNUMMER, 
                    string Original_KOSTCODE, 
                    string Original_FACTUURVALUTA, 
                    global::System.Nullable<decimal> Original_KOSTPRIJS, 
                    global::System.Nullable<decimal> Original_KOSTAANTAL, 
                    global::System.Nullable<decimal> Original_KOSTBEDRAG, 
                    string Original_KOSTVALUTA, 
                    global::System.Nullable<int> Original_KOSTBTWCODE, 
                    global::System.Nullable<decimal> Original_KOSTBTWBEDRAG, 
                    string Original_KOSTRELATIE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTPRIJS, 
                    global::System.Nullable<decimal> Original_OPBRENGSTAANTAL, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBEDRAG, 
                    string Original_OPBRENGSTVALUTA, 
                    global::System.Nullable<int> Original_OPBRENGSTBTWCODE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBTWBEDRAG, 
                    string Original_OPBRENGSTRELATIE, 
                    global::System.Nullable<int> Original_IFACTUURREGELNUMMER, 
                    global::System.Nullable<int> Original_UFACTUURREGELNUMMER, 
                    string Original_MEDEWERKER, 
                    global::System.Nullable<int> Original_UFACTUURNUMMER, 
                    global::System.Nullable<int> Original_IFACTUURNUMMER, 
                    global::System.Nullable<bool> Original_UFACTUURREGELPRINTEN, 
                    global::System.Nullable<global::System.DateTime> Original_DATUM, 
                    global::System.Nullable<bool> Original_FACTUREREN, 
                    global::System.Nullable<int> Original_VOLGORDE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTWISSELKOERS, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBEDRAGEURO, 
                    global::System.Nullable<decimal> Original_KOSTWISSELKOERS, 
                    global::System.Nullable<decimal> Original_KOSTBEDRAGEURO, 
                    global::System.Nullable<bool> Original_ROWOPEN, 
                    string Original_ROWOPENBY, 
                    global::System.Nullable<bool> Original_BTWREGEL, 
                    global::System.Nullable<int> Original_CREDITCRNUMBER) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_KONUMMER));
            if ((Original_DOSSIERNUMMER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_DOSSIERNUMMER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTCODE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KOSTCODE));
            }
            if ((Original_FACTUURVALUTA == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FACTUURVALUTA));
            }
            if ((Original_KOSTPRIJS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_KOSTPRIJS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTAANTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_KOSTAANTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTBEDRAG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_KOSTBEDRAG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTVALUTA == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_KOSTVALUTA));
            }
            if ((Original_KOSTBTWCODE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_KOSTBTWCODE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_KOSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTRELATIE == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_KOSTRELATIE));
            }
            if ((Original_OPBRENGSTPRIJS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_OPBRENGSTPRIJS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTAANTAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_OPBRENGSTAANTAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTBEDRAG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_OPBRENGSTBEDRAG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTVALUTA == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_OPBRENGSTVALUTA));
            }
            if ((Original_OPBRENGSTBTWCODE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_OPBRENGSTBTWCODE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_OPBRENGSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTRELATIE == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_OPBRENGSTRELATIE));
            }
            if ((Original_IFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_IFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_UFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_UFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_MEDEWERKER == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_MEDEWERKER));
            }
            if ((Original_UFACTUURNUMMER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_UFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_IFACTUURNUMMER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_IFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_UFACTUURREGELPRINTEN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_UFACTUURREGELPRINTEN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_DATUM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_DATUM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_FACTUREREN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((bool)(Original_FACTUREREN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_VOLGORDE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_VOLGORDE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTWISSELKOERS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_OPBRENGSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_OPBRENGSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTWISSELKOERS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_KOSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_KOSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ROWOPEN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((bool)(Original_ROWOPEN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_ROWOPENBY == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_ROWOPENBY));
            }
            if ((Original_BTWREGEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((bool)(Original_BTWREGEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_CREDITCRNUMBER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_CREDITCRNUMBER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> DOSSIERNUMMER, 
                    string KOSTCODE, 
                    string OMSCHRIJVING, 
                    string FACTUURVALUTA, 
                    global::System.Nullable<decimal> KOSTPRIJS, 
                    global::System.Nullable<decimal> KOSTAANTAL, 
                    global::System.Nullable<decimal> KOSTBEDRAG, 
                    string KOSTVALUTA, 
                    global::System.Nullable<int> KOSTBTWCODE, 
                    global::System.Nullable<decimal> KOSTBTWBEDRAG, 
                    string KOSTRELATIE, 
                    string KOSTOMSCHRIJVING, 
                    global::System.Nullable<decimal> OPBRENGSTPRIJS, 
                    global::System.Nullable<decimal> OPBRENGSTAANTAL, 
                    global::System.Nullable<decimal> OPBRENGSTBEDRAG, 
                    string OPBRENGSTVALUTA, 
                    global::System.Nullable<int> OPBRENGSTBTWCODE, 
                    global::System.Nullable<decimal> OPBRENGSTBTWBEDRAG, 
                    string OPBRENGSTRELATIE, 
                    string OPBRENGSTOMSCHRIJVING, 
                    global::System.Nullable<int> IFACTUURREGELNUMMER, 
                    global::System.Nullable<int> UFACTUURREGELNUMMER, 
                    string MEDEWERKER, 
                    global::System.Nullable<int> UFACTUURNUMMER, 
                    global::System.Nullable<int> IFACTUURNUMMER, 
                    global::System.Nullable<bool> UFACTUURREGELPRINTEN, 
                    global::System.Nullable<global::System.DateTime> DATUM, 
                    global::System.Nullable<bool> FACTUREREN, 
                    global::System.Nullable<int> VOLGORDE, 
                    global::System.Nullable<decimal> OPBRENGSTWISSELKOERS, 
                    global::System.Nullable<decimal> OPBRENGSTBEDRAGEURO, 
                    global::System.Nullable<decimal> KOSTWISSELKOERS, 
                    global::System.Nullable<decimal> KOSTBEDRAGEURO, 
                    global::System.Nullable<bool> ROWOPEN, 
                    string ROWOPENBY, 
                    global::System.Nullable<bool> BTWREGEL, 
                    global::System.Nullable<int> CREDITCRNUMBER) {
            if ((DOSSIERNUMMER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(DOSSIERNUMMER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((KOSTCODE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KOSTCODE));
            }
            if ((OMSCHRIJVING == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OMSCHRIJVING));
            }
            if ((FACTUURVALUTA == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FACTUURVALUTA));
            }
            if ((KOSTPRIJS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(KOSTPRIJS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KOSTAANTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(KOSTAANTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KOSTBEDRAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(KOSTBEDRAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((KOSTVALUTA == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(KOSTVALUTA));
            }
            if ((KOSTBTWCODE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(KOSTBTWCODE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((KOSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(KOSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((KOSTRELATIE == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(KOSTRELATIE));
            }
            if ((KOSTOMSCHRIJVING == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KOSTOMSCHRIJVING));
            }
            if ((OPBRENGSTPRIJS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(OPBRENGSTPRIJS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTAANTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(OPBRENGSTAANTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTBEDRAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(OPBRENGSTBEDRAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTVALUTA == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(OPBRENGSTVALUTA));
            }
            if ((OPBRENGSTBTWCODE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(OPBRENGSTBTWCODE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(OPBRENGSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTRELATIE == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(OPBRENGSTRELATIE));
            }
            if ((OPBRENGSTOMSCHRIJVING == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(OPBRENGSTOMSCHRIJVING));
            }
            if ((IFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(IFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((UFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(UFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MEDEWERKER == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(MEDEWERKER));
            }
            if ((UFACTUURNUMMER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(UFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((IFACTUURNUMMER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(IFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UFACTUURREGELPRINTEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(UFACTUURREGELPRINTEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((DATUM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(DATUM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((FACTUREREN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(FACTUREREN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((VOLGORDE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(VOLGORDE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTWISSELKOERS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(OPBRENGSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(OPBRENGSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((KOSTWISSELKOERS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(KOSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((KOSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(KOSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((ROWOPEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(ROWOPEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((ROWOPENBY == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(ROWOPENBY));
            }
            if ((BTWREGEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(BTWREGEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CREDITCRNUMBER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(CREDITCRNUMBER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> DOSSIERNUMMER, 
                    string KOSTCODE, 
                    string OMSCHRIJVING, 
                    string FACTUURVALUTA, 
                    global::System.Nullable<decimal> KOSTPRIJS, 
                    global::System.Nullable<decimal> KOSTAANTAL, 
                    global::System.Nullable<decimal> KOSTBEDRAG, 
                    string KOSTVALUTA, 
                    global::System.Nullable<int> KOSTBTWCODE, 
                    global::System.Nullable<decimal> KOSTBTWBEDRAG, 
                    string KOSTRELATIE, 
                    string KOSTOMSCHRIJVING, 
                    global::System.Nullable<decimal> OPBRENGSTPRIJS, 
                    global::System.Nullable<decimal> OPBRENGSTAANTAL, 
                    global::System.Nullable<decimal> OPBRENGSTBEDRAG, 
                    string OPBRENGSTVALUTA, 
                    global::System.Nullable<int> OPBRENGSTBTWCODE, 
                    global::System.Nullable<decimal> OPBRENGSTBTWBEDRAG, 
                    string OPBRENGSTRELATIE, 
                    string OPBRENGSTOMSCHRIJVING, 
                    global::System.Nullable<int> IFACTUURREGELNUMMER, 
                    global::System.Nullable<int> UFACTUURREGELNUMMER, 
                    string MEDEWERKER, 
                    global::System.Nullable<int> UFACTUURNUMMER, 
                    global::System.Nullable<int> IFACTUURNUMMER, 
                    global::System.Nullable<bool> UFACTUURREGELPRINTEN, 
                    global::System.Nullable<global::System.DateTime> DATUM, 
                    global::System.Nullable<bool> FACTUREREN, 
                    global::System.Nullable<int> VOLGORDE, 
                    global::System.Nullable<decimal> OPBRENGSTWISSELKOERS, 
                    global::System.Nullable<decimal> OPBRENGSTBEDRAGEURO, 
                    global::System.Nullable<decimal> KOSTWISSELKOERS, 
                    global::System.Nullable<decimal> KOSTBEDRAGEURO, 
                    global::System.Nullable<bool> ROWOPEN, 
                    string ROWOPENBY, 
                    global::System.Nullable<bool> BTWREGEL, 
                    global::System.Nullable<int> CREDITCRNUMBER, 
                    int Original_KONUMMER, 
                    global::System.Nullable<int> Original_DOSSIERNUMMER, 
                    string Original_KOSTCODE, 
                    string Original_FACTUURVALUTA, 
                    global::System.Nullable<decimal> Original_KOSTPRIJS, 
                    global::System.Nullable<decimal> Original_KOSTAANTAL, 
                    global::System.Nullable<decimal> Original_KOSTBEDRAG, 
                    string Original_KOSTVALUTA, 
                    global::System.Nullable<int> Original_KOSTBTWCODE, 
                    global::System.Nullable<decimal> Original_KOSTBTWBEDRAG, 
                    string Original_KOSTRELATIE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTPRIJS, 
                    global::System.Nullable<decimal> Original_OPBRENGSTAANTAL, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBEDRAG, 
                    string Original_OPBRENGSTVALUTA, 
                    global::System.Nullable<int> Original_OPBRENGSTBTWCODE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBTWBEDRAG, 
                    string Original_OPBRENGSTRELATIE, 
                    global::System.Nullable<int> Original_IFACTUURREGELNUMMER, 
                    global::System.Nullable<int> Original_UFACTUURREGELNUMMER, 
                    string Original_MEDEWERKER, 
                    global::System.Nullable<int> Original_UFACTUURNUMMER, 
                    global::System.Nullable<int> Original_IFACTUURNUMMER, 
                    global::System.Nullable<bool> Original_UFACTUURREGELPRINTEN, 
                    global::System.Nullable<global::System.DateTime> Original_DATUM, 
                    global::System.Nullable<bool> Original_FACTUREREN, 
                    global::System.Nullable<int> Original_VOLGORDE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTWISSELKOERS, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBEDRAGEURO, 
                    global::System.Nullable<decimal> Original_KOSTWISSELKOERS, 
                    global::System.Nullable<decimal> Original_KOSTBEDRAGEURO, 
                    global::System.Nullable<bool> Original_ROWOPEN, 
                    string Original_ROWOPENBY, 
                    global::System.Nullable<bool> Original_BTWREGEL, 
                    global::System.Nullable<int> Original_CREDITCRNUMBER, 
                    int KONUMMER) {
            if ((DOSSIERNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(DOSSIERNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((KOSTCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(KOSTCODE));
            }
            if ((OMSCHRIJVING == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OMSCHRIJVING));
            }
            if ((FACTUURVALUTA == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FACTUURVALUTA));
            }
            if ((KOSTPRIJS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(KOSTPRIJS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KOSTAANTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(KOSTAANTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KOSTBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(KOSTBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((KOSTVALUTA == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(KOSTVALUTA));
            }
            if ((KOSTBTWCODE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(KOSTBTWCODE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((KOSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(KOSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((KOSTRELATIE == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(KOSTRELATIE));
            }
            if ((KOSTOMSCHRIJVING == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KOSTOMSCHRIJVING));
            }
            if ((OPBRENGSTPRIJS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(OPBRENGSTPRIJS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTAANTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(OPBRENGSTAANTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(OPBRENGSTBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTVALUTA == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(OPBRENGSTVALUTA));
            }
            if ((OPBRENGSTBTWCODE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(OPBRENGSTBTWCODE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(OPBRENGSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTRELATIE == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(OPBRENGSTRELATIE));
            }
            if ((OPBRENGSTOMSCHRIJVING == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(OPBRENGSTOMSCHRIJVING));
            }
            if ((IFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(IFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((UFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(UFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MEDEWERKER == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(MEDEWERKER));
            }
            if ((UFACTUURNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(UFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((IFACTUURNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(IFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UFACTUURREGELPRINTEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(UFACTUURREGELPRINTEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((DATUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(DATUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((FACTUREREN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(FACTUREREN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((VOLGORDE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(VOLGORDE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTWISSELKOERS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(OPBRENGSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((OPBRENGSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(OPBRENGSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((KOSTWISSELKOERS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(KOSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((KOSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(KOSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((ROWOPEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(ROWOPEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((ROWOPENBY == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(ROWOPENBY));
            }
            if ((BTWREGEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(BTWREGEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CREDITCRNUMBER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(CREDITCRNUMBER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_KONUMMER));
            if ((Original_DOSSIERNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_DOSSIERNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_KOSTCODE));
            }
            if ((Original_FACTUURVALUTA == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_FACTUURVALUTA));
            }
            if ((Original_KOSTPRIJS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_KOSTPRIJS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTAANTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_KOSTAANTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_KOSTBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTVALUTA == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_KOSTVALUTA));
            }
            if ((Original_KOSTBTWCODE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_KOSTBTWCODE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_KOSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTRELATIE == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_KOSTRELATIE));
            }
            if ((Original_OPBRENGSTPRIJS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Original_OPBRENGSTPRIJS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTAANTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_OPBRENGSTAANTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_OPBRENGSTBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTVALUTA == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_OPBRENGSTVALUTA));
            }
            if ((Original_OPBRENGSTBTWCODE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(Original_OPBRENGSTBTWCODE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTBTWBEDRAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(Original_OPBRENGSTBTWBEDRAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTRELATIE == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_OPBRENGSTRELATIE));
            }
            if ((Original_IFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_IFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_UFACTUURREGELNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_UFACTUURREGELNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_MEDEWERKER == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_MEDEWERKER));
            }
            if ((Original_UFACTUURNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_UFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_IFACTUURNUMMER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_IFACTUURNUMMER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_UFACTUURREGELPRINTEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_UFACTUURREGELPRINTEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_DATUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(Original_DATUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_FACTUREREN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(Original_FACTUREREN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_VOLGORDE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_VOLGORDE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTWISSELKOERS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_OPBRENGSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_OPBRENGSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_OPBRENGSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTWISSELKOERS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_KOSTWISSELKOERS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_KOSTBEDRAGEURO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_KOSTBEDRAGEURO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_ROWOPEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((bool)(Original_ROWOPEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_ROWOPENBY == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_ROWOPENBY));
            }
            if ((Original_BTWREGEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((bool)(Original_BTWREGEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_CREDITCRNUMBER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_CREDITCRNUMBER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[106].Value = ((int)(KONUMMER));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> DOSSIERNUMMER, 
                    string KOSTCODE, 
                    string OMSCHRIJVING, 
                    string FACTUURVALUTA, 
                    global::System.Nullable<decimal> KOSTPRIJS, 
                    global::System.Nullable<decimal> KOSTAANTAL, 
                    global::System.Nullable<decimal> KOSTBEDRAG, 
                    string KOSTVALUTA, 
                    global::System.Nullable<int> KOSTBTWCODE, 
                    global::System.Nullable<decimal> KOSTBTWBEDRAG, 
                    string KOSTRELATIE, 
                    string KOSTOMSCHRIJVING, 
                    global::System.Nullable<decimal> OPBRENGSTPRIJS, 
                    global::System.Nullable<decimal> OPBRENGSTAANTAL, 
                    global::System.Nullable<decimal> OPBRENGSTBEDRAG, 
                    string OPBRENGSTVALUTA, 
                    global::System.Nullable<int> OPBRENGSTBTWCODE, 
                    global::System.Nullable<decimal> OPBRENGSTBTWBEDRAG, 
                    string OPBRENGSTRELATIE, 
                    string OPBRENGSTOMSCHRIJVING, 
                    global::System.Nullable<int> IFACTUURREGELNUMMER, 
                    global::System.Nullable<int> UFACTUURREGELNUMMER, 
                    string MEDEWERKER, 
                    global::System.Nullable<int> UFACTUURNUMMER, 
                    global::System.Nullable<int> IFACTUURNUMMER, 
                    global::System.Nullable<bool> UFACTUURREGELPRINTEN, 
                    global::System.Nullable<global::System.DateTime> DATUM, 
                    global::System.Nullable<bool> FACTUREREN, 
                    global::System.Nullable<int> VOLGORDE, 
                    global::System.Nullable<decimal> OPBRENGSTWISSELKOERS, 
                    global::System.Nullable<decimal> OPBRENGSTBEDRAGEURO, 
                    global::System.Nullable<decimal> KOSTWISSELKOERS, 
                    global::System.Nullable<decimal> KOSTBEDRAGEURO, 
                    global::System.Nullable<bool> ROWOPEN, 
                    string ROWOPENBY, 
                    global::System.Nullable<bool> BTWREGEL, 
                    global::System.Nullable<int> CREDITCRNUMBER, 
                    int Original_KONUMMER, 
                    global::System.Nullable<int> Original_DOSSIERNUMMER, 
                    string Original_KOSTCODE, 
                    string Original_FACTUURVALUTA, 
                    global::System.Nullable<decimal> Original_KOSTPRIJS, 
                    global::System.Nullable<decimal> Original_KOSTAANTAL, 
                    global::System.Nullable<decimal> Original_KOSTBEDRAG, 
                    string Original_KOSTVALUTA, 
                    global::System.Nullable<int> Original_KOSTBTWCODE, 
                    global::System.Nullable<decimal> Original_KOSTBTWBEDRAG, 
                    string Original_KOSTRELATIE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTPRIJS, 
                    global::System.Nullable<decimal> Original_OPBRENGSTAANTAL, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBEDRAG, 
                    string Original_OPBRENGSTVALUTA, 
                    global::System.Nullable<int> Original_OPBRENGSTBTWCODE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBTWBEDRAG, 
                    string Original_OPBRENGSTRELATIE, 
                    global::System.Nullable<int> Original_IFACTUURREGELNUMMER, 
                    global::System.Nullable<int> Original_UFACTUURREGELNUMMER, 
                    string Original_MEDEWERKER, 
                    global::System.Nullable<int> Original_UFACTUURNUMMER, 
                    global::System.Nullable<int> Original_IFACTUURNUMMER, 
                    global::System.Nullable<bool> Original_UFACTUURREGELPRINTEN, 
                    global::System.Nullable<global::System.DateTime> Original_DATUM, 
                    global::System.Nullable<bool> Original_FACTUREREN, 
                    global::System.Nullable<int> Original_VOLGORDE, 
                    global::System.Nullable<decimal> Original_OPBRENGSTWISSELKOERS, 
                    global::System.Nullable<decimal> Original_OPBRENGSTBEDRAGEURO, 
                    global::System.Nullable<decimal> Original_KOSTWISSELKOERS, 
                    global::System.Nullable<decimal> Original_KOSTBEDRAGEURO, 
                    global::System.Nullable<bool> Original_ROWOPEN, 
                    string Original_ROWOPENBY, 
                    global::System.Nullable<bool> Original_BTWREGEL, 
                    global::System.Nullable<int> Original_CREDITCRNUMBER) {
            return this.Update(DOSSIERNUMMER, KOSTCODE, OMSCHRIJVING, FACTUURVALUTA, KOSTPRIJS, KOSTAANTAL, KOSTBEDRAG, KOSTVALUTA, KOSTBTWCODE, KOSTBTWBEDRAG, KOSTRELATIE, KOSTOMSCHRIJVING, OPBRENGSTPRIJS, OPBRENGSTAANTAL, OPBRENGSTBEDRAG, OPBRENGSTVALUTA, OPBRENGSTBTWCODE, OPBRENGSTBTWBEDRAG, OPBRENGSTRELATIE, OPBRENGSTOMSCHRIJVING, IFACTUURREGELNUMMER, UFACTUURREGELNUMMER, MEDEWERKER, UFACTUURNUMMER, IFACTUURNUMMER, UFACTUURREGELPRINTEN, DATUM, FACTUREREN, VOLGORDE, OPBRENGSTWISSELKOERS, OPBRENGSTBEDRAGEURO, KOSTWISSELKOERS, KOSTBEDRAGEURO, ROWOPEN, ROWOPENBY, BTWREGEL, CREDITCRNUMBER, Original_KONUMMER, Original_DOSSIERNUMMER, Original_KOSTCODE, Original_FACTUURVALUTA, Original_KOSTPRIJS, Original_KOSTAANTAL, Original_KOSTBEDRAG, Original_KOSTVALUTA, Original_KOSTBTWCODE, Original_KOSTBTWBEDRAG, Original_KOSTRELATIE, Original_OPBRENGSTPRIJS, Original_OPBRENGSTAANTAL, Original_OPBRENGSTBEDRAG, Original_OPBRENGSTVALUTA, Original_OPBRENGSTBTWCODE, Original_OPBRENGSTBTWBEDRAG, Original_OPBRENGSTRELATIE, Original_IFACTUURREGELNUMMER, Original_UFACTUURREGELNUMMER, Original_MEDEWERKER, Original_UFACTUURNUMMER, Original_IFACTUURNUMMER, Original_UFACTUURREGELPRINTEN, Original_DATUM, Original_FACTUREREN, Original_VOLGORDE, Original_OPBRENGSTWISSELKOERS, Original_OPBRENGSTBEDRAGEURO, Original_KOSTWISSELKOERS, Original_KOSTBEDRAGEURO, Original_ROWOPEN, Original_ROWOPENBY, Original_BTWREGEL, Original_CREDITCRNUMBER, Original_KONUMMER);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private KostenOpbrengstenTableAdapter _kostenOpbrengstenTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public KostenOpbrengstenTableAdapter KostenOpbrengstenTableAdapter {
            get {
                return this._kostenOpbrengstenTableAdapter;
            }
            set {
                this._kostenOpbrengstenTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._kostenOpbrengstenTableAdapter != null) 
                            && (this._kostenOpbrengstenTableAdapter.Connection != null))) {
                    return this._kostenOpbrengstenTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._kostenOpbrengstenTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(SSLTESTDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kostenOpbrengstenTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.KostenOpbrengsten.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._kostenOpbrengstenTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(SSLTESTDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kostenOpbrengstenTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.KostenOpbrengsten.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._kostenOpbrengstenTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(SSLTESTDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._kostenOpbrengstenTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.KostenOpbrengsten.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._kostenOpbrengstenTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(SSLTESTDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._kostenOpbrengstenTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._kostenOpbrengstenTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._kostenOpbrengstenTableAdapter != null)) {
                    revertConnections.Add(this._kostenOpbrengstenTableAdapter, this._kostenOpbrengstenTableAdapter.Connection);
                    this._kostenOpbrengstenTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._kostenOpbrengstenTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._kostenOpbrengstenTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._kostenOpbrengstenTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._kostenOpbrengstenTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._kostenOpbrengstenTableAdapter != null)) {
                    this._kostenOpbrengstenTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._kostenOpbrengstenTableAdapter]));
                    this._kostenOpbrengstenTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591